<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".Instructions">

    <TextView
        android:id="@+id/textView10"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="4dp"
        android:text="Instructions:"
        android:textColor="@android:color/holo_blue_dark"
        android:textSize="32sp"
        android:textStyle="bold"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.501"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <TextView
        android:id="@+id/textView13"
        android:layout_width="603dp"
        android:layout_height="507dp"
        android:layout_marginBottom="8dp"
        android:layout_marginEnd="8dp"
        android:layout_marginStart="12dp"
        android:layout_marginTop="8dp"
        android:text="1.  Enter your beacon's MAC address.  Then, press confirm and wait for it to scan.  Make sure your beacon's MAC address is entered correctly.  IT IS CASE AND SPACE SENSITIVE.  Format should be XX:XX:XX:XX:XX:XX.  Also, make sure bluetooth is on and that your device is running on ANDROID 6.0 OR HIGHER.                                                                                                                                                                                                                                  2.  A second window should show up with all the features of the app on it.  On the top right corner, the button takes you back to the main screen if you would like to scan for a different beacon.  It is titled &quot;Change Beacons.&quot;  The button titled &quot;Refresh distnace from iBeacon&quot; allows you to manually refresh beacon data.  The switch that enables auto search allows that app to automaticly refresh beacon data.  If at any point your beacon drops out of range or comes back into range of your device, you will be sent a notification with information about your iBeacon.  If you tap on the notification, it takes you to a page where you can store this data.  Another feature that you can turn on is &quot;missing beacon.&quot;  By doing this, you set your beacon to &quot;missing mode,&quot; which allows other devices to also search for your beacon.  If your beacon is detected by another user, the data will be shown in the bottom of your screen.  Hitting the &quot;clear&quot; button clears the data at the bottom of your screen.  If &quot;missing mode&quot; is on, it will automaticly refresh these values if other users have detected your beacon elsewhere.  You will be sent a notification with information about your beacon when it is detected by another device.  Finally, if you allow te app to search for other missing beacons, the app will search for beacons that have &quot;missing mode&quot; on."
        android:textColor="@android:color/black"
        android:textSize="17sp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.25"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.091" />

    <TextView
        android:id="@+id/textView17"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginBottom="8dp"
        android:layout_marginTop="8dp"
        android:text="* Important Information:"
        android:textColor="@android:color/holo_blue_dark"
        android:textSize="32sp"
        android:textStyle="bold"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.502"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.562" />

    <TextView
        android:id="@+id/textView18"
        android:layout_width="568dp"
        android:layout_height="280dp"
        android:layout_marginBottom="8dp"
        android:layout_marginTop="8dp"
        android:text="1.  Requires internet connection and location services.  Please turn them on before using the app.                                                                                                                                2.  If auto search and missing search are both turned on, it can be a bit glitchy.  If the app glitches out, force quit and reopen the app.                                                                                                                        3.  Don't register the same iBeacon on two different devices, it glitches out the app.                                                                                                                                                                                                                   4.  The phone number is needed in case your beacon holder goes missing and someone else finds it.  If they input the beacon's MAC Address.  For this reason, it is recommended that you tape your beacon's MAC Address on your beacon."
        android:textColor="@android:color/black"
        android:textSize="20sp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.844" />

    <TextView
        android:id="@+id/textView19"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginBottom="8dp"
        android:layout_marginEnd="8dp"
        android:layout_marginStart="8dp"
        android:layout_marginTop="8dp"
        android:text="Thank you, and enjoy the app!"
        android:textColor="@android:color/holo_green_light"
        android:textSize="25sp"
        android:textStyle="bold"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.914" />

    <TextView
        android:id="@+id/textView20"
        android:layout_width="171dp"
        android:layout_height="29dp"
        android:layout_marginBottom="8dp"
        android:layout_marginTop="8dp"
        android:text="The App Creator,"
        android:textColor="@android:color/holo_orange_light"
        android:textSize="20sp"
        android:textStyle="bold"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.466"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.945" />

    <TextView
        android:id="@+id/textView21"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        android:layout_marginEnd="8dp"
        android:layout_marginStart="8dp"
        android:text="Edmund"
        android:textColor="@android:color/holo_red_light"
        android:textSize="30sp"
        android:textStyle="bold"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.6"
        app:layout_constraintStart_toStartOf="parent" />

    <Button
        android:id="@+id/exit"
        android:layout_width="73dp"
        android:layout_height="46dp"
        android:layout_marginTop="4dp"
        android:text="Exit"
        android:textColor="@android:color/holo_purple"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent" />
</android.support.constraint.ConstraintLayout>